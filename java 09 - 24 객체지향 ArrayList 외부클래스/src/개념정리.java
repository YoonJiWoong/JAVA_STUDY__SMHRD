
public class 개념정리 {

	
	//객체를 설계하는 공식
	//MVC(Model View Controller) - 디자인 패턴
	
	//Model : 시스템에서 데이터를 관리/표현하는 클래스 ex) 성적정보, 학생정보, 음악정보, 영화정보
	
	// View : 시스템에서 화면, 보여지는 역할 (화면구성,콘솔 출력 등) 
	// ex)Student main - 멘트쓰는거 빼두는게 좋다. - 콘솔만 아니라 다른데에도 쓸 수 있고.. 유연한
	// 프론트앤드 같은...?
 	
	//Controller : Model과 View의 중간역활/ 사이에서 연결고리, 핵심 연산, 알고리즘을 담당/ 시스템 핵심 알고리즘
	// ex : 음악 플레이어(재생 : 콘솔하면 도움받아서 사용자 재생 원하는지? 음악 클래스로부터 재생할 음악 받아와... 
	// 콘솔에서다음곡 재생해라고 하면 음악에서 다음곡
	// 중간에서 컨트롤 하고 하는...
	
	// 꼭 하나일 필요는 없고 동시에 할 수도 있어
	
	
}
